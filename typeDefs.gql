type Query{
    # dummy:String
    getUser: User,
    getPosts:[Post]
}


type User {
  _id: ID
  username: String! @unique
  email: String!
  password: String!
  avatar: String
  joinDate: String
  favorites: [Post]
}

type Post {
  title: String!
  imageUrl: String!
  categories: [String]!
  description: String!
  createdDate: String
  likes: Int
  createdBy: User!
  messages: [Message]
}

type Message {
  _id: ID
  messageBody: String!
  messageDate: String
  messageUser: User!
}


type Token{
  token:String!
}

type Mutation {
  # signupUser(
  #   username:String!,
  #   email:String!, 
  #   password:String! 
  # ): User!

  signupUser(
    username:String!,
    email:String!, 
    password:String! 
  ): Token

  # signinUser(
  #   username:String!,
  #   password:String! 
  # ): User!

  # return user token rather than User obj
  signinUser(
    username:String!,
    password:String! 
  ): Token
  
  addPost(
    title: String!, 
    imageUrl: String!, 
    categories: [String]!,
    description: String!,
    creatorId:ID
  ):Post!
}